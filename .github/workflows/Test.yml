# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
name: Building recovery

on:

#  release:

#    types: [published]

#  push:

#    branches:

#      - master

#    paths:

#      - '.config'

#  schedule:

#    - cron: 0 8 * * 5

  watch:

    types: [started]

env:

  MANIFEST: https://github.com/PitchBlackRecoveryProject/manifest_pb

  MANIFEST_BRANCH: android-12.1 

  DEVICE: p3s 

  DT_LINK: https://github.com/Hasajapathirana/android_device_samsung_p3s-1

  DT_PATH: device/samsung/p3s

  TARGET: recoveryimage

  TZ: Asia/Kolkata

jobs:

  build:

    runs-on: ubuntu-18.04

    steps:

       - name: Checkout

         uses: actions/checkout@master

         

       - name: Initializing environment

         run: |

            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d

            docker rmi `docker images -q`

            sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix

            git config --global user.name "Hasajapathirana"

            git config --global user.email "hasajapathirana2011@gmail.com"         

            sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* 

            sudo -E apt-get clean

            sudo -E apt-get -qq update

            sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev repo rsync flex curl  bison aria2

            sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo

            sudo chmod a+rx /usr/local/bin/repo

            

       - name: Sync recovery source and device tree

         run: |

             mkdir work

             cd work

             repo init -u $MANIFEST -b $MANIFEST_BRANCH --depth=1 --groups=all,-notdefault,-device,-darwin,-x86,-mips

             repo sync -j4

             git clone $DT_LINK --depth=1 --single-branch $DT_PATH

             

       - name: Build

         run: |

              cd work

              . build/envsetup.sh &&lunch twrp_$DEVICE-eng &&export ALLOW_MISSING_DEPENDENCIES=true && mka $TARGET

             

       - uses: actions/upload-artifact@v2

         with:

          name: recoveryzip

          path: work/out/target/product/*/*.zip

       - uses: actions/upload-artifact@v2

         with:

          name: recoveryimage

          path: work/out/target/product/*/*.img
